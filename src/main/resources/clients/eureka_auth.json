{
  "openapi": "3.0.1",
  "info": {
    "title": "Eureka Authentication API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://springdoc.org"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:9010",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/eureka/authentication/v1/specialist": {
      "post": {
        "tags": [
          "specialist-controller"
        ],
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialistPersist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Persist a specialist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Specialist"
                }
              }
            }
          }
        }
      }
    },
    "/eureka/authentication/v1/auth/refresh-token": {
      "post": {
        "tags": [
          "authentication-controller"
        ],
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Refresh access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserToken"
                }
              }
            }
          }
        }
      }
    },
    "/eureka/authentication/v1/customer/updatePassword": {
      "put": {
        "tags": [
          "customer-controller"
        ],
        "operationId": "updatePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Update customer password"
          }
        }
      }
    },
    "/eureka/authentication/v1/auth/login": {
      "post": {
        "tags": [
          "authentication-controller"
        ],
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Authentication an user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUser"
                }
              }
            }
          }
        }
      }
    },
    "/eureka/authentication/v1/this-is-why-we-play": {
      "get": {
        "tags": [
          "this-is-why-we-play-controller"
        ],
        "operationId": "letsDoThis",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/eureka/authentication/v1/customer": {
      "post": {
        "tags": [
          "customer-controller"
        ],
        "operationId": "save_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPersist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Persist a customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "debugMessage": {
            "type": "string"
          },
          "subErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiSubError"
            }
          }
        }
      },
      "ApiSubError": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "rejectedValue": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "Experience": {
        "required": [
          "professionId",
          "professionName"
        ],
        "type": "object",
        "properties": {
          "professionId": {
            "type": "integer",
            "format": "int32"
          },
          "professionName": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "time": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Photo": {
        "required": [
          "size",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "size": {
            "maximum": 4194304,
            "minimum": 5080,
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "maxLength": 200,
            "minLength": 36,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SocialNetwork": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 30,
            "minLength": 3,
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "SpecialistCvDto": {
        "required": [
          "experienceTimes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "about": {
            "maxLength": 1300,
            "minLength": 30,
            "type": "string"
          },
          "socialNetworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialNetwork"
            }
          },
          "gallery": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Photo"
            }
          },
          "profilePhoto": {
            "$ref": "#/components/schemas/Photo"
          },
          "experienceTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Experience"
            }
          }
        }
      },
      "SpecialistPersist": {
        "required": [
          "address",
          "document",
          "email",
          "lastName",
          "name",
          "password",
          "phone",
          "specialistSpecializations",
          "workLocations"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "identity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "maxLength": 127,
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "maxLength": 60,
            "minLength": 7,
            "type": "string"
          },
          "document": {
            "maxLength": 12,
            "minLength": 8,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string"
          },
          "secondaryPhone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string"
          },
          "password": {
            "maxLength": 50,
            "minLength": 8,
            "type": "string"
          },
          "specialistSpecializations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecialistSpecializationDto"
            }
          },
          "workLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkLocationDto"
            }
          },
          "specialistCv": {
            "$ref": "#/components/schemas/SpecialistCvDto"
          }
        }
      },
      "SpecialistSpecializationDto": {
        "required": [
          "professionId",
          "specialistId",
          "specializationId"
        ],
        "type": "object",
        "properties": {
          "specialistId": {
            "type": "string",
            "format": "uuid"
          },
          "specializationId": {
            "type": "integer",
            "format": "int32"
          },
          "professionId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WorkLocationDto": {
        "required": [
          "countryId",
          "districtId",
          "specialistId"
        ],
        "type": "object",
        "properties": {
          "specialistId": {
            "type": "string",
            "format": "uuid"
          },
          "districtId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "countryId": {
            "type": "string"
          }
        }
      },
      "Specialist": {
        "required": [
          "address",
          "document",
          "email",
          "lastName",
          "name",
          "phone",
          "publicUrl",
          "secondaryPhone"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "identity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "maxLength": 127,
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "maxLength": 60,
            "minLength": 7,
            "type": "string"
          },
          "document": {
            "maxLength": 12,
            "minLength": 8,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string"
          },
          "secondaryPhone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string"
          },
          "publicUrl": {
            "maxLength": 127,
            "minLength": 7,
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "ratings": {
            "type": "object"
          },
          "districtId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RefreshToken": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "maxLength": 9999,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "UserToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshExpiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "idToken": {
            "type": "string"
          },
          "notBeforePolicy": {
            "type": "integer",
            "format": "int32"
          },
          "sessionState": {
            "type": "string"
          },
          "otherClaims": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "scope": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "errorDescription": {
            "type": "string"
          },
          "errorUri": {
            "type": "string"
          }
        }
      },
      "UserPasswordDTO": {
        "required": [
          "currentPassword",
          "nwPassword",
          "username"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "maxLength": 40,
            "minLength": 7,
            "type": "string"
          },
          "nwPassword": {
            "maxLength": 40,
            "minLength": 7,
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "maxLength": 60,
            "minLength": 7,
            "type": "string"
          },
          "verificationCode": {
            "type": "string"
          }
        }
      },
      "UserLogin": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 60,
            "minLength": 7,
            "type": "string"
          },
          "password": {
            "maxLength": 50,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "AuthUser": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshExpiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "idToken": {
            "type": "string"
          },
          "notBeforePolicy": {
            "type": "integer",
            "format": "int32"
          },
          "sessionState": {
            "type": "string"
          },
          "otherClaims": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "scope": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "errorDescription": {
            "type": "string"
          },
          "errorUri": {
            "type": "string"
          },
          "profileType": {
            "type": "integer",
            "format": "int32"
          },
          "profileName": {
            "type": "string"
          }
        }
      },
      "CustomerPersist": {
        "required": [
          "email",
          "lastName",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "identity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "maxLength": 127,
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "maxLength": 60,
            "minLength": 7,
            "type": "string"
          },
          "document": {
            "maxLength": 12,
            "minLength": 8,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string"
          },
          "profilePhoto": {
            "$ref": "#/components/schemas/Photo"
          },
          "publicUrl": {
            "maxLength": 127,
            "minLength": 7,
            "type": "string"
          },
          "verifiedEmail": {
            "type": "boolean"
          },
          "districtId": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "maxLength": 50,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "Customer": {
        "required": [
          "email",
          "lastName",
          "name"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "identity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "maxLength": 127,
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "maxLength": 60,
            "minLength": 7,
            "type": "string"
          },
          "document": {
            "maxLength": 12,
            "minLength": 8,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string"
          },
          "profilePhoto": {
            "type": "object"
          },
          "publicUrl": {
            "maxLength": 127,
            "minLength": 7,
            "type": "string"
          },
          "verifiedEmail": {
            "type": "boolean"
          },
          "districtId": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "basicScheme": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}